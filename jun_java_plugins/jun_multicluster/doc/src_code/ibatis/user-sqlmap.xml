<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="model.User">
	<!-- Alias Map Defined -->
	<typeAlias alias="UserQuery" type="com.caland.core.query.UserQuery" />
	<typeAlias alias="model.User" type="com.caland.core.bean.model.User" />
	<resultMap id="user" class="model.User">
		<result property="id" column="id" />
		<result property="username" column="username" />
		<result property="age" column="age" />
		<result property="phone" column="phone" />
		<result property="email" column="email" />
	</resultMap>
	<!-- Select SQL -->
	<sql id="user.selector">
		SELECT
		<dynamic>
			<isNotEmpty property="fields">
				$fields$
			</isNotEmpty>
			<isEmpty property="fields">
			id,username,age,phone,email
			</isEmpty>
		</dynamic>
		FROM user
	</sql>
	<sql id="userList.where">
		<dynamic prepend=" WHERE ">
			<isNotNull property="id" prepend=" AND ">
				id=#id#
			</isNotNull>
			<isNotNull property="username" prepend=" AND ">
			<isEqual property="usernameLike" compareValue="false">
				username=#username#
			</isEqual>
			<isEqual property="usernameLike" compareValue="true">
				 <![CDATA[  username like '%$username$%' ]]>
			</isEqual>
			</isNotNull>
			<isNotNull property="age" prepend=" AND ">
				age=#age#
			</isNotNull>
			<isNotNull property="phone" prepend=" AND ">
				phone=#phone#
			</isNotNull>
			<isNotNull property="email" prepend=" AND ">
			<isEqual property="emailLike" compareValue="false">
				email=#email#
			</isEqual>
			<isEqual property="emailLike" compareValue="true">
				 <![CDATA[  email like '%$email$%' ]]>
			</isEqual>
			</isNotNull>
		</dynamic>
	</sql>

	<!-- 用#号会导致druid连接池报错 -->
	<sql id="userList.order">
		<dynamic prepend=" ORDER BY ">
			<isNotEmpty property="orderFields">
				<iterate property="orderFields" conjunction="," open=""
					close="">
					$orderFields[].fieldName$ $orderFields[].order$
				</iterate>
			</isNotEmpty>
		</dynamic>
	</sql>

	<sql id="userList.limit">
		<dynamic prepend=" LIMIT  ">
			<isNotEmpty property="startRow">
				#startRow#,#pageSize#
			</isNotEmpty>
		</dynamic>
	</sql>

	<!-- 根据主键查询 -->
	<select id="model.User.getUserByKey" resultMap="user" parameterClass="hashMap">
		SELECT id,username,age,phone,email FROM user
		WHERE
		id=#id#
	</select>
	<select id="model.User.getUsersByKeys" resultMap="user"
		parameterClass="hashMap">
		SELECT id,username,age,phone,email FROM user
		WHERE
		id in
		<iterate conjunction="," open="(" close=")" property="keys">
			#keys[]#
		</iterate>
	</select>

	<!-- 根据主键删除 -->
	<delete id="model.User.deleteByKey" parameterClass="hashMap">
		DELETE FROM user
		WHERE
		id=#id#
	</delete>

	<delete id="model.User.deleteByKeys">
		DELETE FROM user
		WHERE
		id in
		<iterate conjunction="," open="(" close=")" property="keys">
			#keys[]#
		</iterate>
	</delete>

	<!-- 根据主键更新 -->
	<update id="model.User.updateUserByKey" parameterClass="model.User">
		UPDATE user
		<dynamic prepend="SET">
			<isNotNull prepend="," property="id">
				id = #id#
			</isNotNull>
			<isNotNull prepend="," property="username">
				username = #username#
			</isNotNull>
			<isNotNull prepend="," property="age">
				age = #age#
			</isNotNull>
			<isNotNull prepend="," property="phone">
				phone = #phone#
			</isNotNull>
			<isNotNull prepend="," property="email">
				email = #email#
			</isNotNull>
		</dynamic>
		WHERE
		id=#id#
	</update>
	<!-- 分页 -->
	<select id="model.User.getUserListWithPage" parameterClass="UserQuery"
		resultMap="user">
		<include refid="user.selector" />
		<include refid="userList.where" />
		<include refid="userList.order" />
		<include refid="userList.limit" />
	</select>
	<select id="model.User.getUserListCount" parameterClass="UserQuery"
		resultClass="int">
		SELECT count(1) FROM user
		<include refid="userList.where" />
	</select>
	<select id="model.User.getUserList" parameterClass="UserQuery"
		resultMap="user">
		<include refid="user.selector" />
		<include refid="userList.where" />
		<include refid="userList.order" />
	</select>

	<!-- 如果使用自定义字段查询,则要使用resultClass否则会出现异常 -->
	<select id="model.User.getUserListWithPageFields" parameterClass="UserQuery"
		resultClass="model.User">
		<include refid="user.selector" />
		<include refid="userList.where" />
		<include refid="userList.order" />
		<include refid="userList.limit" />
	</select>
	<select id="model.User.getUserListFields" parameterClass="UserQuery"
		resultClass="model.User">
		<include refid="user.selector" />
		<include refid="userList.where" />
		<include refid="userList.order" />
	</select>
	<insert id="model.User.insertUser" parameterClass="model.User">
		INSERT INTO user
		<dynamic prepend="(" close=")">
			<isNotEmpty prepend="," property="id">
				id
			</isNotEmpty>
			<isNotEmpty prepend="," property="username">
				username
			</isNotEmpty>
			<isNotEmpty prepend="," property="age">
				age
			</isNotEmpty>
			<isNotEmpty prepend="," property="phone">
				phone
			</isNotEmpty>
			<isNotEmpty prepend="," property="email">
				email
			</isNotEmpty>
		</dynamic>
		VALUES
		<dynamic prepend="(" close=")">
			<isNotEmpty prepend="," property="id">
				#id#
			</isNotEmpty>
			<isNotEmpty prepend="," property="username">
				#username#
			</isNotEmpty>
			<isNotEmpty prepend="," property="age">
				#age#
			</isNotEmpty>
			<isNotEmpty prepend="," property="phone">
				#phone#
			</isNotEmpty>
			<isNotEmpty prepend="," property="email">
				#email#
			</isNotEmpty>
		</dynamic>
		<selectKey resultClass="Integer" keyProperty="id">
			SELECT LAST_INSERT_ID() AS ID
		</selectKey>
	</insert>
</sqlMap>
