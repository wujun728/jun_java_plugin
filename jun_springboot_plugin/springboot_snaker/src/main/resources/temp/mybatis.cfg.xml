<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <typeAliases>
        <package name="org.snaker.engine.entity"/>
    </typeAliases>
    <!-- 引用映射文件 -->
    <mappers>
        <!-- resource : 相对路径查询资源的属性.
        相对于当前核心配置文件的位置开始查找映射文件.
        -->
        <!--<mapper resource="com/bjsxt/pojo/model.User-mapper.xml"/>-->
        <mapper resource="mapper/process.xml"/>
        <mapper resource="mapper/order.xml"/>
        <mapper resource="mapper/task.xml"/>
        <mapper resource="mapper/task-actor.xml"/>
        <mapper resource="mapper/hist-order.xml"/>
        <mapper resource="mapper/hist-task.xml"/>
        <mapper resource="mapper/hist-task-actor.xml"/>
        <mapper resource="mapper/query.xml"/>
        <mapper resource="mapper/hist-query.xml"/>
    </mappers>
<!--
    &lt;!&ndash; 环境, 就是配置数据库访问环境的标签.
    default - 默认使用什么环境
    &ndash;&gt;
    <environments default="development">
        &lt;!&ndash; 配置具体的某一个环境
        id - 当前环境的命名
        &ndash;&gt;
        <environment id="development">
            &lt;!&ndash; 事务管理方式, 当前框架管理数据库事务使用什么技术.
            type - 使用的具体技术. JDBC, 就是Connection.commit()/rollback()
            &ndash;&gt;
            <transactionManager type="JDBC" />
            &lt;!&ndash; 数据源, 访问的数据库参数
            type - 管理方式, 管理Connection的方式,
            POOLED , 代表池化管理. 就是连接池.
            &ndash;&gt;
            <dataSource type="POOLED">
                &lt;!&ndash; 配置具体参数 &ndash;&gt;
                <property name="driver" value="com.mysql.jdbc.Driver" />
                <property name="url" value="jdbc:mysql://localhost:3306/mybatis" />
                <property name="username" value="root" />
                <property name="password" value="root" />
            </dataSource>
        </environment>
    </environments>
-->
</configuration>